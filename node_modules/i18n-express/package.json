{
  "name": "i18n-express",
  "version": "1.0.4",
  "description": "A simple i18n middleware for Express.js.",
  "main": "index.js",
  "scripts": {
    "jshint": "jshint .",
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/koalazak/i18n-express.git"
  },
  "keywords": [
    "i18n",
    "express",
    "middleware",
    "json",
    "internationalisation",
    "node",
    "session",
    "language",
    "lang",
    "cookies",
    "javascript",
    "js",
    "handlebars",
    "ejs"
  ],
  "author": {
    "name": "koalazak",
    "email": "zak.tux@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/koalazak/i18n-express/issues"
  },
  "homepage": "https://github.com/koalazak/i18n-express",
  "readme": "# i18n-express\n[![Build Status](https://img.shields.io/travis/koalazak/i18n-express.svg)](https://travis-ci.org/koalazak/i18n-express)\n[![npm version](https://badge.fury.io/js/i18n-express.svg)](http://badge.fury.io/js/i18n-express)\n\nA simple i18n middleware for Express.js\nThis module just reads all the <lang>.json files in a directory. Then calculates the user lang and exposes \"texts\" variables in your views with the texts in that json. \n\nBy default, the user will see the site in the language set by the `cookieLangName` session. If the session is not set, the language set by the browser will be used.\n\nIf the user wants to set the language to spanish for example, he would have to visit *http://site.com/?clang=es* (clang is defined at `paramLangName`).\n\nThis can be done by using a html 'select' or any other means you want. Once that is done, the `cookieLangName` session will be updated with the new language and the user will forever see the site in the new language until he decides to set a new language again. \n\nNOTE: When using this module, we recommend also using the [geolang-express](https://github.com/koalazak/geolang-express) module, which sets the `cookieLangName` session to a language based on the visit IP address. \n\n\n## Requirements\n\n  - Node >= 0.12\n  - Express.js\n\n## Instalation\n\n```bash\n$ npm install i18n-express\n```\n\n## Usage\n\n```js\nvar i18n=require(\"i18n-express\");\n\napp.use( i18n(options) );\n```\n\n## Options\n\n- `translationsPath` : *(default: `i18n`)* The path where you store translations json files.\n- `cookieLangName` : *(default: `ulang`)* If you provide a cookie name, try to get user lang from this cookie.\n- `browserEnable` : *(default: `true`)* If enabled, try to get user lang from browser headers.\n- `defaultLang` :  *(default: `en`)* If all others methods fail, use this lang.\n- `paramLangName` :  *(default: `clang`)* Get param to change user lang. ej: visiting 'example.com?clang=es' the lang switchs to 'es'\n- `siteLangs` :  *(default: `['en']`)* Array of supported langs. (posbile values for clang and json files)\n\n\n## Example\n\n\n Create a directory \"i18n\" with .json files for each lang. Ej:\n - en.json\n - es.json\n - en\\-us.json\n \n With translations like this (en.json):\n\n ```json\n {\n \"WELCOME_MSG\": \"Hi! Welcome!\",\n \"CONTACT_TEXT\": \"More bla\"\n }\n ```\n \n\n In your Express app.js:\n\n```javascript\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar i18n=require(\"i18n-express\"); // <-- require the module\n\nvar indexRoutes = require('./routes/index');\n\nvar app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\napp.use(session({\n  secret: 'secret',\n  saveUninitialized: true,\n  resave: true\n}));\n\napp.use(i18n({\n  translationsPath: path.join(__dirname, 'i18n'), // <--- use here. Specify translations files path.\n  siteLangs: [\"en\",\"es\"]\n}));\n...\n\napp.use('/', indexRoutes);\n\nmodule.exports = app;\n\n...\n\n```\n\nNow in your ejs view you have `texts` object and `lang` variable with the active language:\n\n```html\n<div>\n  Choose your language:\n  <ul>\n    <li><a class=\"<%=(lang==\"es\"?\"active\":\"\")%>\" href=\"/?clang=es\">Spanish</a></li>\n    <li><a class=\"<%=(lang==\"en\"?\"active\":\"\")%>\" href=\"/?clang=en\">English</a></li>\n  </ul> \n\n\t<p><%=texts.WELCOME_MSG%></p>\n  \n</div>\n```\n\nOr in your handlebars view:\n\n```html\n<div>\n  Choose your language:\n  <ul>\n    <li><a href=\"/?clang=es\">Spanish</a></li>\n    <li><a href=\"/?clang=en\">English</a></li>\n  </ul> \n\n\t<p>{{texts.WELCOME_MSG}}</p>\n\n</div>\n```\n\n## License\n\nMIT\n\n## Author\n\n  - [Facu ZAK](https://github.com/koalazak) \n",
  "readmeFilename": "README.md",
  "_id": "i18n-express@1.0.4",
  "dist": {
    "shasum": "23a5b982ef1036419e69be9ec98a71cffd4ee6d1"
  },
  "_from": "i18n-express@",
  "_resolved": "https://registry.npmjs.org/i18n-express/-/i18n-express-1.0.4.tgz"
}
